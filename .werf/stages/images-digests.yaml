{{- /* Find all images digests and save use them to compose a structure for the module values. */ -}}
{{- $ImagesIDList := list }}
{{- $Images := tpl (.Files.Get ".werf/stages/images.yaml") . }}

{{- range $ImageManifest := regexSplit "\n?---[ \t]*\n" $Images -1 }}
  {{- $ImageManifest := $ImageManifest | fromYaml }}
  {{- if $ImageManifest.image }}
    {{- if ne $ImageManifest.final false }}
      {{- $ImagesIDList = append $ImagesIDList $ImageManifest.image }}
    {{- end }}
  {{- end }}
{{- end }}

# Images Digest: a files with all image digests to be able to use them in helm templates of a module
# Version: module version
---
image: images-digests-and-version
final: false
fromImage: builder/alpine
import:
- image: tools/jq
  add: /usr/bin/jq
  before: install
dependencies:
{{- range $ImageID := $ImagesIDList }}
  {{- $ImageNameCamel  := $ImageID | splitList "/" | last  | camelcase | untitle }}
  - image: {{ $ImageID }}
    before: setup
    imports:
    - type: ImageDigest
      targetEnv: MODULE_IMAGE_DIGEST_{{ $ImageNameCamel }}
{{- end }}
shell:
  setup:
    - |
      env | grep MODULE_IMAGE_DIGEST | jq -Rn '
        reduce inputs as $i (
          {};
          . * (
            $i | ltrimstr("MODULE_IMAGE_DIGEST_") | sub("=";"_") |
            split("_") as [$imageName, $digest] |
            {($imageName): $digest}
          )
        )
      ' > /images_digests.json
    - |
      jq -n --arg version "{{ env "MODULES_MODULE_TAG" "local" }}" '{"version": $version}' > /version.json
