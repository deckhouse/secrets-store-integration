{{- define "vault_secrets_webhook_resources" }}
cpu: 10m
memory: 50Mi
{{- end }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: vault-secrets-webhook
  namespace: d8-{{ $.Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "vault-secrets-webhook")) | nindent 2 }}
spec:
  resourcePolicy:
    containerPolicies:
    - containerName: vault-secrets-webhook
      minAllowed:
        {{- include "vault_secrets_webhook_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 100m
        memory: 200Mi
    {{- include "helm_lib_vpa_kube_rbac_proxy_resources" . | nindent 4 }}
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: webhook
  updatePolicy:
    updateMode: "Initial"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook
  namespace: d8-{{ $.Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "vault-secrets-webhook")) | nindent 2 }}
spec:
  {{- include "helm_lib_deployment_on_master_strategy_and_replicas_for_ha" . | nindent 2 }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: vault-secrets-webhook
  template:
    metadata:
      annotations:
        checksum/certificate: {{ include (print .Template.BasePath "/vault-secrets-webhook/secret-tls.yaml") . | sha256sum }}
      labels:
        app: vault-secrets-webhook
        stronghold.deckhouse.io/mutate: skip
    spec:
      serviceAccountName: vault-secrets-webhook
      automountServiceAccountToken: true
      {{- include "helm_lib_priority_class" (tuple . "system-cluster-critical") | nindent 6 }}
      {{- include "helm_lib_pod_anti_affinity_for_ha" (list . (dict "app" "vault-secrets-webhook")) | nindent 6 }}
      {{- include "helm_lib_node_selector" (tuple . "master") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "any-node" "with-uninitialized") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_nobody" . | nindent 6 }}
      {{- include "ssi.imagePullSecrets" . | nindent 6 }}
      containers:
      - name: vault-secrets-webhook
        {{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | nindent 8 }}
        image: {{ include "helm_lib_module_image" (list . "vaultSecretsWebhook") }}
        env:
        - name: TLS_CERT_FILE
          value: /var/serving-cert/tls.crt
        - name: TLS_PRIVATE_KEY_FILE
          value: /var/serving-cert/tls.key
        - name: LISTEN_ADDRESS
          value: ":8443"
        - name: ENV_INJECTOR_IMAGE
          value: {{ include "helm_lib_module_image" (list . "envInjector") }}
        - name: TLS_SKIP_VERIFY
          value: "true"
        - name: TELEMETRY_LISTEN_ADDRESS
          value: "127.0.0.1:8000"
        - name: SKIP_MUTATE_CONTAINERS
          value: "check-linux-kernel istio-validation istio-proxy istio-init"
        {{- if eq .Values.secretsStoreIntegration.connectionConfiguration "Manual" }}
        - name: ADDR
          value: {{ .Values.secretsStoreIntegration.connection.url }}
        - name: AUTH_PATH
          value: {{ .Values.secretsStoreIntegration.connection.authPath }}
        {{- end }}
        {{- if and (.Values.secretsStoreIntegration.connection) (hasKey .Values.secretsStoreIntegration.connection "namespace") (ne .Values.secretsStoreIntegration.connection.namespace "") }}
        - name: VAULT_NAMESPACE
          value: {{ .Values.secretsStoreIntegration.connection.namespace }}
        {{- end }}
        ports:
        - containerPort: 8443
          name: https
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: 8443
          initialDelaySeconds: 30
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: 8443
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_logs_with_extra" 10 | nindent 12 }}
{{- if not (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
            {{- include "vault_secrets_webhook_resources" . | nindent 12 }}
{{- end }}
      - name: kube-rbac-proxy
        {{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | nindent 8 }}
        image: {{ include "helm_lib_module_common_image" (list $ "kubeRbacProxy") }}
        args:
        - "--secure-listen-address=$(KUBE_RBAC_PROXY_LISTEN_ADDRESS):9889"
        - "--v=2"
        - "--logtostderr=true"
        - "--stale-cache-interval=1h30m"
        env:
        - name: KUBE_RBAC_PROXY_LISTEN_ADDRESS
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KUBE_RBAC_PROXY_CONFIG
          value: |
            upstreams:
            - upstream: http://127.0.0.1:8000/metrics
              path: /metrics
              authorization:
                resourceAttributes:
                  namespace: d8-{{ $.Chart.Name }}
                  apiGroup: apps
                  apiVersion: v1
                  resource: deployments
                  subresource: prometheus-metrics
                  name: vault-secrets-webhook
        ports:
        - containerPort: 9889
          name: https-metrics
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 14 }}
          {{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
            {{- include "helm_lib_container_kube_rbac_proxy_resources" . | nindent 14 }}
          {{- end }}
      volumes:
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: vault-secrets-webhook-tls
